{"ast":null,"code":"import { React } from \"react\";\nimport { BaseUrl, authHeader } from \"./common/common\";\nasync function LoanList(page, email, role) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: authHeader().Authorization\n    }\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/loans/all\" + \"?page=\" + page + \"&email=\" + email + \"&role=\" + role, requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  console.log(\"GetResponse\", GetResponse);\n  return GetResponse;\n}\n_c = LoanList;\nasync function changestatus(status, Id) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: authHeader().Authorization\n    }\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/loans/changeStatus\" + \"?status=\" + status + \"&Id=\" + Id, requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\nasync function registerUser(name, email, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/register\", requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\nasync function loginUser(email, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/login\", requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\nasync function getLoan(newLoan) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: authHeader().Authorization\n    },\n    body: JSON.stringify({\n      newLoan\n    })\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/loans\", requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\nasync function GetLoanDetail(id) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: authHeader().Authorization\n    }\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/loans/GetLoanDetail?\" + id, requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\n_c2 = GetLoanDetail;\nasync function PayLoan(id, payment, date) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: authHeader().Authorization\n    },\n    body: JSON.stringify({\n      payment,\n      date\n    })\n  };\n  const GetResponse = await fetch(BaseUrl + \"api/loans/PayLoan?\" + id, requestOptions).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return GetResponse;\n}\n_c3 = PayLoan;\nexport { LoanList, changestatus, registerUser, loginUser, getLoan, GetLoanDetail, PayLoan };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoanList\");\n$RefreshReg$(_c2, \"GetLoanDetail\");\n$RefreshReg$(_c3, \"PayLoan\");","map":{"version":3,"names":["React","BaseUrl","authHeader","LoanList","page","email","role","requestOptions","method","headers","authorization","Authorization","GetResponse","fetch","then","response","json","data","console","log","_c","changestatus","status","Id","registerUser","name","password","body","JSON","stringify","loginUser","getLoan","newLoan","GetLoanDetail","id","_c2","PayLoan","payment","date","_c3","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/PROJECT/mini-loan/App/src/service.js"],"sourcesContent":["import { React } from \"react\";\r\nimport { BaseUrl, authHeader } from \"./common/common\";\r\n\r\nasync function LoanList(page, email, role) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: authHeader().Authorization,\r\n    },\r\n  };\r\n  const GetResponse = await fetch(\r\n    BaseUrl + \"api/loans/all\" + \"?page=\" + page + \"&email=\" + email + \"&role=\" + role,\r\n    requestOptions\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n    \r\n  console.log(\"GetResponse\", GetResponse);\r\n  return GetResponse;\r\n}\r\n\r\nasync function changestatus(status, Id) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: authHeader().Authorization,\r\n    },\r\n  };\r\n  \r\n  const GetResponse = await fetch(\r\n    BaseUrl + \"api/loans/changeStatus\" + \"?status=\" + status + \"&Id=\" + Id,\r\n    requestOptions\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nasync function registerUser(name, email, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name,\r\n      email,\r\n      password,\r\n    }),\r\n  };\r\n  const GetResponse = await fetch(BaseUrl + \"api/register\", requestOptions)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nasync function loginUser(email, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n    }),\r\n  };\r\n  const GetResponse = await fetch(BaseUrl + \"api/login\", requestOptions)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nasync function getLoan(newLoan) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: authHeader().Authorization,\r\n    },\r\n    body: JSON.stringify({ newLoan }),\r\n  };\r\n  const GetResponse = await fetch(BaseUrl + \"api/loans\", requestOptions)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nasync function GetLoanDetail(id) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: authHeader().Authorization,\r\n    },\r\n  };\r\n  const GetResponse = await fetch(\r\n    BaseUrl + \"api/loans/GetLoanDetail?\" + id,\r\n    requestOptions\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nasync function PayLoan(id, payment, date) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: authHeader().Authorization,\r\n    },\r\n    body: JSON.stringify({\r\n      payment,\r\n      date,\r\n    }),\r\n  };\r\n  \r\n  const GetResponse = await fetch(\r\n    BaseUrl + \"api/loans/PayLoan?\" + id,\r\n    requestOptions\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n  return GetResponse;\r\n}\r\n\r\nexport { LoanList, changestatus, registerUser, loginUser, getLoan, GetLoanDetail, PayLoan};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}