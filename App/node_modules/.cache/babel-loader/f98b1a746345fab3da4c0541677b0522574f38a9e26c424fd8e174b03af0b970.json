{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\React App\\\\App\\\\src\\\\components\\\\viewStudents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewStudents = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"https://65491ae1dd8ebcd4ab24316d.mockapi.io/api/schools/students\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (res.ok) {\n          const data = await res.json();\n          setStudents(data);\n          console.log(data);\n        } else {\n          console.error(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: student.name\n    }, student.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewStudents, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = ViewStudents;\nexport default ViewStudents;\nvar _c;\n$RefreshReg$(_c, \"ViewStudents\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ViewStudents","_s","students","setStudents","fetchData","res","fetch","method","headers","ok","data","json","console","log","error","children","map","student","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/React App/App/src/components/viewStudents.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ViewStudents = () => {\r\n  const [students, setStudents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          \"https://65491ae1dd8ebcd4ab24316d.mockapi.io/api/schools/students\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setStudents(data);\r\n          console.log(data);\r\n        } else {\r\n          console.error(\"Failed to fetch data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {students.map((student) => (\r\n        <div key={student.id}>{student.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewStudents;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,kEAAkE,EAClE;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAED,IAAIH,GAAG,CAACI,EAAE,EAAE;UACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;UAC7BR,WAAW,CAACO,IAAI,CAAC;UACjBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACnB,CAAC,MAAM;UACLE,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,EACGb,QAAQ,CAACc,GAAG,CAAEC,OAAO,iBACpBlB,OAAA;MAAAgB,QAAA,EAAuBE,OAAO,CAACC;IAAI,GAAzBD,OAAO,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtCID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}